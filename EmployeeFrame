/*
 * EmployeeFrame.java
 *
 * Created on 19 May 2015, 8:44 AM
 */

package pc3project;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import java.io.*;
import java.util.*;

/**
 *
 * @author  91025412
 */
public class EmployeeFrame extends javax.swing.JFrame {
    Connection con = null;
    String url;
    Statement stmt = null;
    ResultSetTableModel model = null;

    
    public void openDatabase(){
        url = "jdbc:odbc:Employee";
        
        try{
            con = DriverManager.getConnection(url);
            stmt = con.createStatement();
            
        }
        catch(SQLException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Problems connecting to " + url, "Connection Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    public void closeDatabase(){
        try{
            con.close();
            stmt.close();
        }
        catch(SQLException e){
            javax.swing.JOptionPane.showMessageDialog(this, "Problems disconnecting from " + url, "Connection Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }                   
    }    
    public void sqlAdd(){
        String sql;
        sql = "INSERT INTO current VALUES(";
        sql += txtEmpNo.getText() + ", ";
        sql += txtName.getText() + "', ";
        sql += txtAddress.getText() + ", ";
        sql += txtSuburb.getText() + ", ";
        sql += txtPostcode.getText() + ", ";
        sql += txtDOB.getText() + ", ";
        sql += txtPhone.getText() + ", ";
        sql += txtWork.getText() + ", ";
        sql += txtMobile.getText() + ", ";
        sql += txtEmail.getText() + ", ";
        }    
    public void sqlNew(){
       //txtEmpNo.setText("");
       txtName.setText("");
       txtAddress.setText("");
       txtSuburb.setText("");
       txtPostcode.setText("");
       txtDOB.setText("");
       txtPhone.setText("");
       txtWork.setText("");
       txtMobile.setText("");
       txtEmail.setText("");
    }       
    
    /** Creates new form EmployeeFrame */
    public EmployeeFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        employeePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtEmpNo = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSuburb = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPostcode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDOB = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtWork = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnRetrieve = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        queryPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        txtQuery = new javax.swing.JTextField();
        btnQuery = new javax.swing.JButton();
        lblRes = new javax.swing.JLabel();
        lblRes1 = new javax.swing.JLabel();
        txtRecords = new javax.swing.JTextField();
        lblRes2 = new javax.swing.JLabel();
        txtReport = new javax.swing.JTextField();
        btnReport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        metadataPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtDataName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDataVer = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtDataDriver = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTableName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTableCols = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30));
        jLabel1.setText("Employee Form");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 234, 37);

        employeePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 0))); // NOI18N
        employeePanel.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("Employee No:");
        employeePanel.add(jLabel3);
        jLabel3.setBounds(20, 30, 80, 14);
        employeePanel.add(txtEmpNo);
        txtEmpNo.setBounds(110, 30, 80, 20);
        employeePanel.add(txtName);
        txtName.setBounds(110, 60, 210, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText("Name:");
        employeePanel.add(jLabel4);
        jLabel4.setBounds(20, 60, 50, 14);
        employeePanel.add(txtAddress);
        txtAddress.setBounds(110, 90, 210, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText("Address:");
        employeePanel.add(jLabel5);
        jLabel5.setBounds(20, 90, 60, 14);
        employeePanel.add(txtSuburb);
        txtSuburb.setBounds(110, 120, 120, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText("Suburb:");
        employeePanel.add(jLabel6);
        jLabel6.setBounds(20, 120, 60, 14);
        employeePanel.add(txtPostcode);
        txtPostcode.setBounds(110, 150, 80, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel7.setText("Postcode:");
        employeePanel.add(jLabel7);
        jLabel7.setBounds(20, 150, 70, 14);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel8.setText("DOB:");
        employeePanel.add(jLabel8);
        jLabel8.setBounds(20, 180, 40, 14);
        employeePanel.add(txtDOB);
        txtDOB.setBounds(110, 180, 130, 20);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText("Phone(hm):");
        employeePanel.add(jLabel9);
        jLabel9.setBounds(20, 210, 70, 14);
        employeePanel.add(txtPhone);
        txtPhone.setBounds(110, 210, 120, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText("Work Ext:");
        employeePanel.add(jLabel10);
        jLabel10.setBounds(20, 240, 70, 14);
        employeePanel.add(txtWork);
        txtWork.setBounds(110, 240, 80, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText("Mobile:");
        employeePanel.add(jLabel11);
        jLabel11.setBounds(20, 270, 50, 14);
        employeePanel.add(txtMobile);
        txtMobile.setBounds(110, 270, 120, 20);
        employeePanel.add(txtEmail);
        txtEmail.setBounds(110, 300, 150, 20);

        btnAdd.setMnemonic('A');
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        employeePanel.add(btnAdd);
        btnAdd.setBounds(120, 340, 90, 23);

        btnRetrieve.setMnemonic('R');
        btnRetrieve.setText("Retrieve");
        btnRetrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveActionPerformed(evt);
            }
        });
        employeePanel.add(btnRetrieve);
        btnRetrieve.setBounds(220, 340, 90, 23);

        btnUpdate.setMnemonic('U');
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        employeePanel.add(btnUpdate);
        btnUpdate.setBounds(320, 340, 90, 23);

        btnDelete.setMnemonic('D');
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        employeePanel.add(btnDelete);
        btnDelete.setBounds(420, 340, 90, 23);

        btnNew.setMnemonic('N');
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        employeePanel.add(btnNew);
        btnNew.setBounds(20, 340, 90, 23);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel14.setText("Email:");
        employeePanel.add(jLabel14);
        jLabel14.setBounds(20, 300, 50, 14);

        getContentPane().add(employeePanel);
        employeePanel.setBounds(20, 70, 520, 390);

        queryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Query", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("Database:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel13.setText("Query:");

        txtDatabase.setText("Employee");

        txtQuery.setText("SELECT * FROM EmpDetail");

        btnQuery.setMnemonic('S');
        btnQuery.setText("Submit Query");
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });

        lblRes.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblRes.setText("Results:");

        lblRes1.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblRes1.setText("Number of Records:");

        txtRecords.setEditable(false);

        lblRes2.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblRes2.setText("Report File:");

        txtReport.setText("H:\\\\Test.txt");

        btnReport.setText("Report File");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblEmployee);

        javax.swing.GroupLayout queryPanelLayout = new javax.swing.GroupLayout(queryPanel);
        queryPanel.setLayout(queryPanelLayout);
        queryPanelLayout.setHorizontalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(queryPanelLayout.createSequentialGroup()
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnQuery, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuery, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)))
                    .addComponent(lblRes)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, queryPanelLayout.createSequentialGroup()
                        .addComponent(lblRes1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRecords, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(queryPanelLayout.createSequentialGroup()
                        .addComponent(lblRes2)
                        .addGap(18, 18, 18)
                        .addComponent(txtReport, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReport, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        queryPanelLayout.setVerticalGroup(
            queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnQuery)
                .addGap(32, 32, 32)
                .addComponent(lblRes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRes1)
                    .addComponent(txtRecords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(queryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRes2)
                    .addComponent(txtReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReport))
                .addContainerGap())
        );

        getContentPane().add(queryPanel);
        queryPanel.setBounds(550, 70, 420, 650);

        metadataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MetaData", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel12.setText("Database Name:");

        txtDataName.setEditable(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel15.setText("Database Ver:");

        txtDataVer.setEditable(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel16.setText("Database Driver:");

        txtDataDriver.setEditable(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel17.setText("Table Name:");

        txtTableName.setEditable(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel18.setText("Table Cols:");

        txtTableCols.setColumns(20);
        txtTableCols.setRows(5);
        jScrollPane2.setViewportView(txtTableCols);

        javax.swing.GroupLayout metadataPanelLayout = new javax.swing.GroupLayout(metadataPanel);
        metadataPanel.setLayout(metadataPanelLayout);
        metadataPanelLayout.setHorizontalGroup(
            metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(metadataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(metadataPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                    .addGroup(metadataPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDataName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(metadataPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDataVer, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(metadataPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDataDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(metadataPanelLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTableName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        metadataPanelLayout.setVerticalGroup(
            metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(metadataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDataName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtDataVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtDataDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(metadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(metadataPanel);
        metadataPanel.setBounds(20, 470, 520, 250);

        pack();
    }// </editor-fold>                        

private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {                                       
    String sql = "SELECT TOP 1 * FROM EmpDetail ORDER BY [EmpID] DESC";
    openDatabase();
    int i;
    int b;
    sqlNew();    
    try{
        ResultSet rs = stmt.executeQuery(sql);
        
        while(rs.next()){            
            i = Integer.parseInt(rs.getString(1));
            b = i+1;                       
            txtEmpNo.setText(String.valueOf(b));
        }
    }
    catch(SQLException e){
        System.out.println(e.toString());
    }
    closeDatabase();
}                                      

private void formWindowActivated(java.awt.event.WindowEvent evt) {                                     
        
}                                    
private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
    String sql = "SELECT TOP 1 * FROM EmpDetail ORDER BY [EmpID] ASC";
    String displayMessage = "";
    openDatabase();
    
    try{
        ResultSet rs = stmt.executeQuery(sql);    
        if(rs.next()){
            txtEmpNo.setText(rs.getString(1));
            txtName.setText(rs.getString(2));
            txtAddress.setText(rs.getString(3));
            txtSuburb.setText(rs.getString(4));
            txtPostcode.setText(rs.getString(5));
            txtDOB.setText(rs.getString(6));
            txtPhone.setText(rs.getString(7));
            txtWork.setText(rs.getString(8));
            txtMobile.setText(rs.getString(9));
            txtEmail.setText(rs.getString(10));
        }
    }
    catch(SQLException e){
        javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    
    try{
        ResultSet rs = stmt.executeQuery("SELECT * FROM EmpDetail");
        ResultSetMetaData meta = rs.getMetaData();
        DatabaseMetaData md = con.getMetaData();
        int cols = meta.getColumnCount();
        String concat = "";
        
        txtDataName.setText(md.getDatabaseProductName());
        txtDataVer.setText(md.getDatabaseProductVersion());
        txtDataDriver.setText(md.getDriverName());
        txtTableName.setText(meta.getTableName(1));
        

            for(int i = 1; i <= cols; i++)
            
                concat = concat + meta.getColumnName(i) + "  " +  meta.getColumnTypeName(i) + "\n"; 
            
        //}
        txtTableCols.setText(concat);
    }
    
    catch(SQLException e){
        javax.swing.JOptionPane.showMessageDialog(this, "Error displaying MetaData", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    closeDatabase();
}                                 

private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {                                       
    String sql = "";
    openDatabase();
    
        sql = "INSERT INTO EmpDetail VALUES(";
        sql += txtEmpNo.getText() + ", ";
        sql += "'" + txtName.getText() + "', ";
        sql += "'" + txtAddress.getText() + "', ";
        sql += "'" + txtSuburb.getText() + "', ";
        sql += txtPostcode.getText() + ",' ";
        sql += txtDOB.getText() + "', ";
        sql += txtPhone.getText() + ", ";
        sql += txtWork.getText() + ", ";
        sql += txtMobile.getText() + ", ";
        sql += "'" + txtEmail.getText() + "')";         
        
        try{        
            stmt.executeUpdate(sql);
            javax.swing.JOptionPane.showMessageDialog(this, "Record added to Database", "Record Added", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException e){
            javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    closeDatabase();
}                                      

private void btnRetrieveActionPerformed(java.awt.event.ActionEvent evt) {                                            
    
    String sql = "SELECT * FROM EmpDetail WHERE [EmpID]=" + txtEmpNo.getText();
    
    openDatabase();    
    try{
        ResultSet rs = stmt.executeQuery(sql);
        if(!rs.next()){
            sqlNew();
            txtName.setText("No record exists with this number");
        }            
        else{
            do{
                txtName.setText(rs.getString(2));
                txtAddress.setText(rs.getString(3));
                txtSuburb.setText(rs.getString(4));
                txtPostcode.setText(rs.getString(5));
                txtDOB.setText(rs.getString(6));
                txtPhone.setText(rs.getString(7));
                txtWork.setText(rs.getString(8));
                txtMobile.setText(rs.getString(9));
                txtEmail.setText(rs.getString(10));                        
            } while(rs.next());
        }
    }
    catch(SQLException e){
        javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Retrieval Error", javax.swing.JOptionPane.ERROR_MESSAGE);        
    }
    closeDatabase();
}                                           

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
    String sql = "UPDATE EmpDetail SET " 
            + "  [EmpID]=" + txtEmpNo.getText() 
            + ", [Emp Name]='" + txtName.getText()
            + "', [Address]='" + txtAddress.getText()
            + "', [Suburb]='" +  txtSuburb.getText()
            + "', [Postcode]='" + txtPostcode.getText()
            + "', [DOB]='" + txtDOB.getText()
            + "', [Home Phone]=" + txtPhone.getText()
            + ", [Extension]=" + txtWork.getText()
            + ", [Mobile]=" + txtMobile.getText()
            + ", [Email]='" + txtEmail.getText() 
            + "' WHERE [EmpID]=" + txtEmpNo.getText();
    openDatabase();
    
    try{
        stmt.executeUpdate(sql);
        javax.swing.JOptionPane.showMessageDialog(this, "Record updated successfully", "Record Updated", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }
    catch(SQLException e){
        javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
}                                         

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
    
    
    if(txtEmpNo.getText().equals("")){
        javax.swing.JOptionPane.showMessageDialog(this, "You must enter a valid Employee Number", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    String sql = "DELETE FROM EmpDetail WHERE [EmpID]=" + txtEmpNo.getText();
    openDatabase();
    
    
    try{        
        stmt.executeUpdate(sql);
        txtEmpNo.setText("");
        sqlNew();
        javax.swing.JOptionPane.showMessageDialog(this, "Record deleted succesfully", "Record Deleted", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }
    catch(SQLException e){
        javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    closeDatabase();
}                                         

private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {                                         
    String sql = txtQuery.getText();
    openDatabase();
    //int rowCount = tblEmployee.getRowCount();
    
    try{
        int rowCount = tblEmployee.getRowCount();
        ResultSet rs = stmt.executeQuery(sql);
        model = new ResultSetTableModel(rs);
        tblEmployee.setModel(model);
        txtRecords.setText(String.valueOf(rowCount-1));
    }
    catch(SQLException e){
        javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    closeDatabase();
}                                        

private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {                                          
    String sql = txtQuery.getText();
    String column = "\n";
    String data = "";
    String value = "";
    Object t;
    int rowCount = tblEmployee.getRowCount();    
    
    openDatabase();
    
    try{        
        ResultSet rs = stmt.executeQuery(sql);       
        
        FileOutputStream fos = new FileOutputStream(txtReport.getText());
        ObjectOutputStream oos = new ObjectOutputStream(fos);
        
        while(rs.next()){
            data += rs.getString(1) + "   | ";
            data += rs.getString(2) + "  |  ";
            data += rs.getString(3) + " | ";
            data += rs.getString(4) + "      | ";
            data += rs.getString(5) + "      | ";
            data += rs.getString(6) + "      | ";
            data += rs.getString(7) + "      | ";
            data += rs.getString(8) + "      | ";
            data += rs.getString(9) + "      | ";
            data += rs.getString(10) + "     | " + "\n";                                        
        }
//        for(int dataString = 0; dataString <= model.getColumnCount(); dataString++){
//            while(rs.next()){
//                data += rs.getString(dataString);
//            }
//        }
        
        model = new ResultSetTableModel(rs);
//        for(int columnName = 0; columnName <= model.getColumnCount(); columnName++){
//            column += model.getColumnName(columnName) + " | ";
//        }
//

            column += model.getColumnName(0) + " |   ";
            column += model.getColumnName(1) + "   |    ";
            column += model.getColumnName(2) + " | ";
            column += model.getColumnName(3) + " | ";
            column += model.getColumnName(4) + " | ";
            column += model.getColumnName(5) + " | ";
            column += model.getColumnName(6) + " | ";
            column += model.getColumnName(7) + " | ";
            column += model.getColumnName(8) + " | ";
            column += model.getColumnName(9) + " | " + "\n";

        
        
        for(char c: column.toCharArray()){
            fos.write(c);
        }
            for(char d: data.toCharArray()){
                fos.write(d);            
        }
    }
    catch(Exception e){
        javax.swing.JOptionPane.showMessageDialog(this, e.toString(), "Report Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    closeDatabase();    
}                                         

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnQuery;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnRetrieve;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel employeePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRes;
    private javax.swing.JLabel lblRes1;
    private javax.swing.JLabel lblRes2;
    private javax.swing.JPanel metadataPanel;
    private javax.swing.JPanel queryPanel;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtDataDriver;
    private javax.swing.JTextField txtDataName;
    private javax.swing.JTextField txtDataVer;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmpNo;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPostcode;
    private javax.swing.JTextField txtQuery;
    private javax.swing.JTextField txtRecords;
    private javax.swing.JTextField txtReport;
    private javax.swing.JTextField txtSuburb;
    private javax.swing.JTextArea txtTableCols;
    private javax.swing.JTextField txtTableName;
    private javax.swing.JTextField txtWork;
    // End of variables declaration                   

}
